///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SJ Lucky Draw JavaScript Library v 0.0.1
// jQuery v 1.11.1
//
// Copyright 2014 J.Soon Personal
// Released under the MIT license
//
// Date: 2014-06-27 14:57 pm
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

if (window.SJ === undefined) {
    window.SJ = {};
}
SJ.Lucky = {
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // 生成不重复的随机数
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    randomNumNoRepeat: function (arr) {
        function noRepeatSort (a, b) {
            return Math.random() > .5 ? -1 : 1;
        }
        return arr.sort(noRepeatSort);
    },
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // 两个数组相减，返回一个新数组 arrLeft (规则：smArr 所有的元素必定都出现在 bgArr 中且没有重复)
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    arrFilter: function (bgArr, smArr) {
        var i, j, arrLeft = [];
        for (i = 0; i < bgArr.length; i += 1) {
            arrLeft.push(bgArr[i]);
        }
        for (i = 0; i < smArr.length; i += 1) {
            for (j = 0; j < arrLeft.length; j += 1) {
                if (smArr[i] === arrLeft[j]) {
                    delete arrLeft[j];
                    arrLeft.splice(j, 1);
                    continue;
                }
            }
        }
        return arrLeft;
    },
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Bless Buff
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    luckyDogIdx: null,
    setLuckyDog: function (idx) {
        this.luckyDogIdx = idx;
        return '我们的祖先在护佑着你';
    },
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Curse Buff
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    shitDogIdx: [],
    setShitDog: function (idx) {
        this.shitDogIdx.push(idx);
        return '复仇，指日可待';
    },
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // 抽奖
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    draw: function (list, bBtn, sBtn) {
        var that = this;
        var num = $(list).children().length; // 获取抽奖人的数量
        var arr = [], arrRandom = [], // 创建有序不重复数组 和 无序不重复数组对象
              i = j = 0, t; // 创建循环变量 和 定时器变量
        var callback = arguments[3] ? arguments[3] : function () {};
        var delay1 = arguments[4] ? arguments[4] : 100; // 点击开始按钮后抽奖的延迟时间 draw delay
        var delay2 = arguments[5] ? arguments[5] : 600; // 点击停止按钮多少秒后触发停止定时器 smooth stop draw delay
        var delay3 = arguments[6] ? arguments[6] : 800; // 触发停止定时器后抽奖的延迟时间 before stop draw delay
        var delay4 = arguments[7] ? arguments[7] : 2800; // 多少秒后抽奖停止 stop draw delay
        // 循环创建有序数组
        for (i = 0; i < num; i += 1) {
            arr.push(i);
        }
        // 初始化，打乱抽奖人的顺序
        arrRandom = that.randomNumNoRepeat(arr);
        // 抽奖定时器函数
        function timer (delay) {
            t = setInterval(function () {
                if (j < arrRandom.length) {
                    $(list).children(':eq(' + arrRandom[j] + ')').addClass('active').siblings().removeClass('active');
                    j += 1;
                } else {
                    // 如果所有人都循环完毕还没有按下停止抽奖按钮，则重新打乱抽奖顺序，再次开始循环
                    arrRandom = that.randomNumNoRepeat(arrRandom);
                    j = 0;
                }
            }, delay);
        }
        // 点击开始抽奖按钮，随机抽取中奖者
        $(bBtn).on('click', function () {
            if (arrRandom.length !== 1) {
                $(this).prop('disabled', 'disabled').addClass('disabled'); // 抽奖开始时，禁用开始按钮
                $(sBtn).removeAttr('disabled').removeClass('disabled'); // 抽奖开始时，启用停止按钮
                timer (delay1);
            }
        });
        // 点击停止抽奖按钮，揭晓中奖者
        $(sBtn).on('click', function () {
            $(this).prop('disabled', 'disabled').addClass('disabled'); // 抽奖停止，禁用停止按钮
            var timeout = setTimeout(function () { // 设置一定延迟的时间，使得停止更平滑
                clearInterval(t);
                timer (delay3);
                timeout = setTimeout(function () {
                    clearInterval(t);
                    // 这里有一些逻辑在里边：如果你贿赂了主持人，则你不能得罪主持人；
                    // 反之，如果你已经得罪了主持人，则你不能再去贿赂主持人
                    // 如果贿赂了抽奖主持人，则你必定会中奖
                    if (that.luckyDogIdx) {
                        var greyTimeout = setTimeout(function () {
                            $(list).children(':eq(' + that.luckyDogIdx + ')').attr('class', 'bingo').siblings().removeClass('active');
                            // 获取到中奖者，然后将其踢出下次抽奖的名单，确保不会造成重复中奖
                            for (i = 0; i < arrRandom.length; i += 1) {
                                if (arrRandom[i] === that.luckyDogIdx) {
                                    delete arrRandom[i];
                                    arrRandom.splice(i, 1); // 将中奖者踢出队列
                                    break;
                                }
                            }
                            that.luckyDogIdx = null;
                            if (arrRandom.length !== 1) {
                                $(bBtn).removeAttr('disabled').removeClass('disabled'); // 抽奖结束后，启用开始按钮
                            } else if (arrRandom.length === 1) {
                                alert('只剩你了，最后一件奖品拿去吧~！！');
                            }
                        }, delay3);
                    } else {
                        // 获取到中奖者，然后将其踢出下次抽奖的名单，确保不会造成重复中奖
                        var luckyDog = $(list).children('li[class="active"]'); // 获取中奖者
                        var luckyIdx = luckyDog.index(); // 获取中奖者的索引号
                        // 如果得罪了抽奖主持人，则你必定不会中奖
                        if (that.shitDogIdx.length !== 0) {
                            var arrLeft = that.arrFilter(arrRandom, that.shitDogIdx);
                            var flag = true; // 标示是否选中了黑名单上的人，默认为选中
                            for (i = 0; i < that.shitDogIdx.length; i += 1) {
                                if (luckyIdx === that.shitDogIdx[i]) {
                                    flag = true;
                                    break;
                                } else {
                                    flag *= false;
                                }
                            }
                            if (flag) {
                                console.log('抽中了黑名单上的人');
                                var greyTimeout = setTimeout(function () {
                                    $(list).children(':eq(' + arrLeft[0] + ')').attr('class', 'bingo').siblings().removeClass('active');
                                    for (i = 0; i < arrRandom.length; i += 1) {
                                        if (arrRandom[i] === arrLeft[0]) {
                                            delete arrRandom[i];
                                            arrRandom.splice(i, 1);
                                            break;
                                        }
                                    }
                                    if (arrRandom.length !== that.shitDogIdx.length) {
                                        $(bBtn).removeAttr('disabled').removeClass('disabled'); // 抽奖结束后，启用开始按钮
                                    } else if (arrRandom.length === that.shitDogIdx.length) {
                                        alert('那么多人都抽不到你，自认倒霉吧~！！');
                                    }
                                    console.log('剩下参加奖的人：' + arrRandom);
                                }, delay3);
                            } else {
                                console.log('没抽中黑名单上的人');
                                luckyDog.attr('class', 'bingo'); // 标记中奖者
                                for (var i = 0; i < arrRandom.length; i += 1) {
                                    if (arrRandom[i] === luckyIdx) {
                                        delete arrRandom[i];
                                        arrRandom.splice(i, 1); // 将中奖者踢出队列
                                        break;
                                    }
                                }
                                if (arrRandom.length !== that.shitDogIdx.length) {
                                    $(bBtn).removeAttr('disabled').removeClass('disabled'); // 抽奖结束后，启用开始按钮
                                } else if (arrRandom.length === that.shitDogIdx.length) {
                                    alert('那么多人都抽不到你，自认倒霉吧~！！');
                                }
                                console.log('剩下参加奖的人：' + arrRandom);
                            }
                        } else { // 如果没有人得罪主持人
                            luckyDog.attr('class', 'bingo'); // 标记中奖者
                            callback(luckyDog);
                            for (var i = 0; i < arrRandom.length; i += 1) {
                                if (arrRandom[i] === luckyIdx) {
                                    delete arrRandom[i];
                                    arrRandom.splice(i, 1); // 将中奖者踢出队列
                                    break;
                                }
                            }
                            if (arrRandom.length !== 1) {
                                $(bBtn).removeAttr('disabled').removeClass('disabled'); // 抽奖结束后，启用开始按钮
                            } else if (arrRandom.length === 1) {
                                alert('那么多人都抽不到你，自认倒霉吧~！！');
                            }
                        }
                    }
                }, delay4); // 3秒钟后停止抽奖
            }, delay2);
        });
    }
}

SJ.Lucky.draw('#sjLuckyList', '#drawBeginBtn', '#drawStopBtn', function (luckyDog) {
    // 获取当前在抽奖池里中奖者相对于 document 的绝对位置
    var oTop = luckyDog.offset().top;
    var oLeft = luckyDog.offset().left;
    // 获取领奖台相对于 document 的绝对位置
    var pTop = $('#sjPodium').offset().top;
    var pLeft = $('#sjPodium').offset().left + 15; // 这里的 15px 的偏移是为了对齐抽奖池里的头像
    // 定义领奖台上中奖者的 CSS 属性
    var bMarginR = 19, bMarginB = -20, bWidth = bHeight =  64,
        bTop = pTop, bLeft = pLeft;
    // 统计已存在中奖者的人数，以此计算出动画的最终坐标位置
    var bNum = $('.sj-bingo').length,
        bNumMax = 10; // 一排的最大人数
    // 克隆中奖者，并重新定义结构
    bingo = luckyDog.clone().html();
    $bingo = $('<div class="sj-bingo">' + bingo + '</div>');
    // 将克隆出来的中奖者放置在抽奖池里中奖者的原始位置
    $bingo.appendTo('body').css({
        top: oTop,
        left: oLeft
    });
    // 动画
    var bNumRem = bNum%bNumMax; // 当前中奖人数和一排最大人数的余数
    var bRowNum = Math.floor(bNum/bNumMax); // 当前排数
    bTop = pTop + bRowNum * (bHeight + bMarginB);
    bLeft = pLeft + bNumRem * (bWidth + bMarginR);
    $bingo.animate({
        top: bTop,
        left: bLeft
    }, 600, function () {
        // complete callback
    });
});